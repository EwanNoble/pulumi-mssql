# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'LoginServerArgs',
    'LoginServerAzureLoginArgs',
    'LoginServerLoginArgs',
    'UserServerArgs',
    'UserServerAzureLoginArgs',
    'UserServerLoginArgs',
]

@pulumi.input_type
class LoginServerArgs:
    def __init__(__self__, *,
                 host: pulumi.Input[str],
                 azure_login: Optional[pulumi.Input['LoginServerAzureLoginArgs']] = None,
                 login: Optional[pulumi.Input['LoginServerLoginArgs']] = None,
                 port: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] host: The host of the SQL Server. Changing this forces a new resource to be created.
        :param pulumi.Input['LoginServerAzureLoginArgs'] azure_login: Azure AD login for managing the database resources. The attributes supported in the `azure_login` block is detailed below.
        :param pulumi.Input['LoginServerLoginArgs'] login: SQL Server login for managing the database resources. The attributes supported in the `login` block is detailed below.
        :param pulumi.Input[str] port: The port of the SQL Server. Defaults to `1433`. Changing this forces a new resource to be created.
        """
        pulumi.set(__self__, "host", host)
        if azure_login is not None:
            pulumi.set(__self__, "azure_login", azure_login)
        if login is not None:
            pulumi.set(__self__, "login", login)
        if port is not None:
            pulumi.set(__self__, "port", port)

    @property
    @pulumi.getter
    def host(self) -> pulumi.Input[str]:
        """
        The host of the SQL Server. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "host")

    @host.setter
    def host(self, value: pulumi.Input[str]):
        pulumi.set(self, "host", value)

    @property
    @pulumi.getter(name="azureLogin")
    def azure_login(self) -> Optional[pulumi.Input['LoginServerAzureLoginArgs']]:
        """
        Azure AD login for managing the database resources. The attributes supported in the `azure_login` block is detailed below.
        """
        return pulumi.get(self, "azure_login")

    @azure_login.setter
    def azure_login(self, value: Optional[pulumi.Input['LoginServerAzureLoginArgs']]):
        pulumi.set(self, "azure_login", value)

    @property
    @pulumi.getter
    def login(self) -> Optional[pulumi.Input['LoginServerLoginArgs']]:
        """
        SQL Server login for managing the database resources. The attributes supported in the `login` block is detailed below.
        """
        return pulumi.get(self, "login")

    @login.setter
    def login(self, value: Optional[pulumi.Input['LoginServerLoginArgs']]):
        pulumi.set(self, "login", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[str]]:
        """
        The port of the SQL Server. Defaults to `1433`. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "port", value)


@pulumi.input_type
class LoginServerAzureLoginArgs:
    def __init__(__self__, *,
                 client_id: pulumi.Input[str],
                 client_secret: pulumi.Input[str],
                 tenant_id: pulumi.Input[str]):
        """
        :param pulumi.Input[str] client_id: The client ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_ID` environment variable.
        :param pulumi.Input[str] client_secret: The client secret of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_SECRET` environment variable.
        :param pulumi.Input[str] tenant_id: The tanant ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_TENANT_ID` environment variable.
        """
        pulumi.set(__self__, "client_id", client_id)
        pulumi.set(__self__, "client_secret", client_secret)
        pulumi.set(__self__, "tenant_id", tenant_id)

    @property
    @pulumi.getter(name="clientId")
    def client_id(self) -> pulumi.Input[str]:
        """
        The client ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_ID` environment variable.
        """
        return pulumi.get(self, "client_id")

    @client_id.setter
    def client_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "client_id", value)

    @property
    @pulumi.getter(name="clientSecret")
    def client_secret(self) -> pulumi.Input[str]:
        """
        The client secret of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_SECRET` environment variable.
        """
        return pulumi.get(self, "client_secret")

    @client_secret.setter
    def client_secret(self, value: pulumi.Input[str]):
        pulumi.set(self, "client_secret", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> pulumi.Input[str]:
        """
        The tanant ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_TENANT_ID` environment variable.
        """
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "tenant_id", value)


@pulumi.input_type
class LoginServerLoginArgs:
    def __init__(__self__, *,
                 password: pulumi.Input[str],
                 username: pulumi.Input[str]):
        """
        :param pulumi.Input[str] password: The password of the SQL Server login. Can also be sourced from the `MSSQL_PASSWORD` environment variable.
        :param pulumi.Input[str] username: The username of the SQL Server login. Can also be sourced from the `MSSQL_USERNAME` environment variable.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @property
    @pulumi.getter
    def password(self) -> pulumi.Input[str]:
        """
        The password of the SQL Server login. Can also be sourced from the `MSSQL_PASSWORD` environment variable.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: pulumi.Input[str]):
        pulumi.set(self, "password", value)

    @property
    @pulumi.getter
    def username(self) -> pulumi.Input[str]:
        """
        The username of the SQL Server login. Can also be sourced from the `MSSQL_USERNAME` environment variable.
        """
        return pulumi.get(self, "username")

    @username.setter
    def username(self, value: pulumi.Input[str]):
        pulumi.set(self, "username", value)


@pulumi.input_type
class UserServerArgs:
    def __init__(__self__, *,
                 host: pulumi.Input[str],
                 azure_login: Optional[pulumi.Input['UserServerAzureLoginArgs']] = None,
                 login: Optional[pulumi.Input['UserServerLoginArgs']] = None,
                 port: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] host: The host of the SQL Server. Changing this forces a new resource to be created.
        :param pulumi.Input['UserServerAzureLoginArgs'] azure_login: Azure AD login for managing the database resources. The attributes supported in the `azure_login` block is detailed below.
        :param pulumi.Input['UserServerLoginArgs'] login: SQL Server login for managing the database resources. The attributes supported in the `login` block is detailed below.
        :param pulumi.Input[str] port: The port of the SQL Server. Defaults to `1433`. Changing this forces a new resource to be created.
        """
        pulumi.set(__self__, "host", host)
        if azure_login is not None:
            pulumi.set(__self__, "azure_login", azure_login)
        if login is not None:
            pulumi.set(__self__, "login", login)
        if port is not None:
            pulumi.set(__self__, "port", port)

    @property
    @pulumi.getter
    def host(self) -> pulumi.Input[str]:
        """
        The host of the SQL Server. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "host")

    @host.setter
    def host(self, value: pulumi.Input[str]):
        pulumi.set(self, "host", value)

    @property
    @pulumi.getter(name="azureLogin")
    def azure_login(self) -> Optional[pulumi.Input['UserServerAzureLoginArgs']]:
        """
        Azure AD login for managing the database resources. The attributes supported in the `azure_login` block is detailed below.
        """
        return pulumi.get(self, "azure_login")

    @azure_login.setter
    def azure_login(self, value: Optional[pulumi.Input['UserServerAzureLoginArgs']]):
        pulumi.set(self, "azure_login", value)

    @property
    @pulumi.getter
    def login(self) -> Optional[pulumi.Input['UserServerLoginArgs']]:
        """
        SQL Server login for managing the database resources. The attributes supported in the `login` block is detailed below.
        """
        return pulumi.get(self, "login")

    @login.setter
    def login(self, value: Optional[pulumi.Input['UserServerLoginArgs']]):
        pulumi.set(self, "login", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[str]]:
        """
        The port of the SQL Server. Defaults to `1433`. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "port", value)


@pulumi.input_type
class UserServerAzureLoginArgs:
    def __init__(__self__, *,
                 client_id: pulumi.Input[str],
                 client_secret: pulumi.Input[str],
                 tenant_id: pulumi.Input[str]):
        """
        :param pulumi.Input[str] client_id: The client ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_ID` environment variable.
        :param pulumi.Input[str] client_secret: The client secret of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_SECRET` environment variable.
        :param pulumi.Input[str] tenant_id: The tenant ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_TENANT_ID` environment variable.
        """
        pulumi.set(__self__, "client_id", client_id)
        pulumi.set(__self__, "client_secret", client_secret)
        pulumi.set(__self__, "tenant_id", tenant_id)

    @property
    @pulumi.getter(name="clientId")
    def client_id(self) -> pulumi.Input[str]:
        """
        The client ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_ID` environment variable.
        """
        return pulumi.get(self, "client_id")

    @client_id.setter
    def client_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "client_id", value)

    @property
    @pulumi.getter(name="clientSecret")
    def client_secret(self) -> pulumi.Input[str]:
        """
        The client secret of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_SECRET` environment variable.
        """
        return pulumi.get(self, "client_secret")

    @client_secret.setter
    def client_secret(self, value: pulumi.Input[str]):
        pulumi.set(self, "client_secret", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> pulumi.Input[str]:
        """
        The tenant ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_TENANT_ID` environment variable.
        """
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "tenant_id", value)


@pulumi.input_type
class UserServerLoginArgs:
    def __init__(__self__, *,
                 password: pulumi.Input[str],
                 username: pulumi.Input[str]):
        """
        :param pulumi.Input[str] password: The password of the SQL Server login. Can also be sourced from the `MSSQL_PASSWORD` environment variable.
        :param pulumi.Input[str] username: The username of the SQL Server login. Can also be sourced from the `MSSQL_USERNAME` environment variable.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @property
    @pulumi.getter
    def password(self) -> pulumi.Input[str]:
        """
        The password of the SQL Server login. Can also be sourced from the `MSSQL_PASSWORD` environment variable.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: pulumi.Input[str]):
        pulumi.set(self, "password", value)

    @property
    @pulumi.getter
    def username(self) -> pulumi.Input[str]:
        """
        The username of the SQL Server login. Can also be sourced from the `MSSQL_USERNAME` environment variable.
        """
        return pulumi.get(self, "username")

    @username.setter
    def username(self, value: pulumi.Input[str]):
        pulumi.set(self, "username", value)


