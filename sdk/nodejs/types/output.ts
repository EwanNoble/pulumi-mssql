// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface LoginServer {
    /**
     * Azure AD login for managing the database resources. The attributes supported in the `azureLogin` block is detailed below.
     */
    azureLogin?: outputs.LoginServerAzureLogin;
    /**
     * The host of the SQL Server. Changing this forces a new resource to be created.
     */
    host: string;
    /**
     * SQL Server login for managing the database resources. The attributes supported in the `login` block is detailed below.
     */
    login?: outputs.LoginServerLogin;
    /**
     * The port of the SQL Server. Defaults to `1433`. Changing this forces a new resource to be created.
     */
    port?: string;
}

export interface LoginServerAzureLogin {
    /**
     * The client ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_ID` environment variable.
     */
    clientId: string;
    /**
     * The client secret of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_SECRET` environment variable.
     */
    clientSecret: string;
    /**
     * The tanant ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_TENANT_ID` environment variable.
     */
    tenantId: string;
}

export interface LoginServerLogin {
    /**
     * The password of the SQL Server login. Can also be sourced from the `MSSQL_PASSWORD` environment variable.
     */
    password: string;
    /**
     * The username of the SQL Server login. Can also be sourced from the `MSSQL_USERNAME` environment variable.
     */
    username: string;
}

export interface UserServer {
    /**
     * Azure AD login for managing the database resources. The attributes supported in the `azureLogin` block is detailed below.
     */
    azureLogin?: outputs.UserServerAzureLogin;
    /**
     * The host of the SQL Server. Changing this forces a new resource to be created.
     */
    host: string;
    /**
     * SQL Server login for managing the database resources. The attributes supported in the `login` block is detailed below.
     */
    login?: outputs.UserServerLogin;
    /**
     * The port of the SQL Server. Defaults to `1433`. Changing this forces a new resource to be created.
     */
    port?: string;
}

export interface UserServerAzureLogin {
    /**
     * The client ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_ID` environment variable.
     */
    clientId: string;
    /**
     * The client secret of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_CLIENT_SECRET` environment variable.
     */
    clientSecret: string;
    /**
     * The tenant ID of the principal used to login to the SQL Server. Can also be sourced from the `MSSQL_TENANT_ID` environment variable.
     */
    tenantId: string;
}

export interface UserServerLogin {
    /**
     * The password of the SQL Server login. Can also be sourced from the `MSSQL_PASSWORD` environment variable.
     */
    password: string;
    /**
     * The username of the SQL Server login. Can also be sourced from the `MSSQL_USERNAME` environment variable.
     */
    username: string;
}

